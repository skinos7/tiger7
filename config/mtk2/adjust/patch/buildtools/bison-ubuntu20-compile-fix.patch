diff -uNr bison-3.0.2/lib/fseterr.c bison-3.0.2b/lib/fseterr.c
--- bison-3.0.2/lib/fseterr.c	2022-01-07 15:21:11.187771601 +0800
+++ bison-3.0.2b/lib/fseterr.c	2022-01-07 15:24:07.878551892 +0800
@@ -29,7 +29,12 @@
   /* Most systems provide FILE as a struct and the necessary bitmask in
      <stdio.h>, because they need it for implementing getc() and putc() as
      fast macros.  */
-#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+
+/* add by dimmalex for smtk2 at ubuntu20.04 compile error */
+#if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+//#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+
+
   fp->_flags |= _IO_ERR_SEEN;
 #elif defined __sferror || defined __DragonFly__ /* FreeBSD, NetBSD, OpenBSD, DragonFly, Mac OS X, Cygwin */
   fp_->_flags |= __SERR;
diff -uNr bison-3.0.2/lib/stdio-impl.h bison-3.0.2b/lib/stdio-impl.h
--- bison-3.0.2/lib/stdio-impl.h	2022-01-07 15:21:11.191771665 +0800
+++ bison-3.0.2b/lib/stdio-impl.h	2022-01-07 17:17:21.649306673 +0800
@@ -19,6 +19,15 @@
    have different naming conventions, or their access requires some casts.  */
 
 
+
+/* add by dimmalex for  Glibc 2.28 made _IO_IN_BACKUP private.  For now, work around this
+   problem by defining it ourselves.  FIXME: Do not rely on glibc
+   internals.  */
+#if !defined _IO_IN_BACKUP && defined _IO_EOF_SEEN
+# define _IO_IN_BACKUP 0x100
+#endif
+
+
 /* BSD stdio derived implementations.  */
 
 #if defined __NetBSD__                         /* NetBSD */
