
# Ubuntu compile tools install
ubuntu_preset:
	sudo apt-get update
	sudo apt-get install vim git subversion pandoc aptitude
	sudo apt-get install gcc g++ binutils patch bzip2 flex bison make autoconf gettext texinfo unzip sharutils gawk
	sudo apt-get install python2 libtool shtool curl lrzsz zlib1g-dev automake automake1.11
	sudo apt-get install lib32z1 libssl-dev device-tree-compiler libevent-dev libreadline-dev
	sudo apt-get install snapd
	sudo snap install ttyd --classic
	-sudo apt-get install lib32ncurses5
	-sudo apt-get install libncurses5-dev
	-sudo apt-get install libncursesw5-dev
	# Disable Check the SSL certificate of the server
	git config --global http.sslVerify false



# Model switch
pid:
	@echo '\ngBOARDID=${gBOARDID}' >> gBOARDID
	@echo "Switch the Board Identify to ${gBOARDID}"
pidinfo:
	@echo 'gBOARDID=${gBOARDID}'

# SDK Download
update:
	# Update the tiger7
	git pull
	# Update the Platform-specific configure repositories
	if [ -d ${gPLATFORM_DIR} ]; then \
		echo "cd ${gPLATFORM_DIR}; git pull"; \
	else \
		echo "cd ${gTOP_DIR}/config; git clone git@gitee.com:ashyelf/${gPLATFORM}"; \
	fi
	# Platform-specific SDK Makefile update
	make -f Makefile.target update
	# Adjust the Platform-specific SDK
	make -f Makefile.target adjust
	# Refresh the menu
	make -f Makefile.target menu
adjust:
	# Adjust the Platform-specific SDK
	make -f Makefile.target adjust

# Firmware upload
ftp repo:
	make -f Makefile.target $@

# SDK clear
bufclean sdkclean:
	if [ -d ${gSDK_DIR} ]; then \
		make -f ${gSDK_MAKEFILE} -C ${gSDK_DIR} $@; \
	else \
		make -f ${gSDK_MAKEFILE} -C ${gPLATFORM_DIR} $@; \
	fi

.PHONY: ubuntu_preset pid pidinfo update adjust ftp repo bufclean sdkclean



#####################################
######## Misc Target ################
#####################################

local start stop purge bootup:
	make -f ${gSDK_MAKEFILE} -C ${gPLATFORM_DIR} $@
sz:
	make -f ${gSDK_MAKEFILE} -C ${gPLATFORM_DIR} $@
zzb: boot
	make -f ${gSDK_MAKEFILE} -C ${gPLATFORM_DIR} $@
tar: boot
	if [ "X${gFLASH_MAKEFILE}" != "X" ]; then \
		if [ -f ${gFLASH_MAKEFILE} ]; then \
			make -f ${gFLASH_MAKEFILE}; \
		fi; \
	fi
	make -f ${gSDK_MAKEFILE} -C ${gPLATFORM_DIR} $@
.PHONY: local start stop purge bootup sz zzb tar



#####################################
######### Debug the Value ###########
#####################################
show_sdk:
	@echo ${gSDK_DIR}
.PHONY: show_sdk



